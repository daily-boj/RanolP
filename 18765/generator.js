// 18765 answer generator

const Literals = {
    0: '+[]',
    1: '+!![]',
    2: '!![]+!![]',
    3: '!![]+!![]+!![]',
    4: '!![]+!![]+!![]+!![]',
    5: '!![]+!![]+!![]+!![]+!![]',
    6: '!![]+!![]+!![]+!![]+!![]+!![]',
    7: '+!![]+[+[]]-!![]-!![]-!![]',
    8: '+!![]+[+[]]-!![]-!![]',
    9: '+!![]+[+[]]-!![]',
    10: '+!![]+[+[]]-[]',
    266: '[!![]+!![]+!![]]+[+[]]+-[]-[!![]+!![]+!![]+[+[]]]-!![]-!![]-!![]-!![]',
    356: '[!![]+!![]+!![]+!![]+[+[]]]*[+!![]+[+[]]-!![]]-!![]-!![]-!![]-!![]',
    365: '[!![]+!![]+!![]+!![]+[+[]]]*[+!![]+[+[]]-!![]]-[]+!![]+!![]+!![]+!![]+!![]',
    370: '[!![]+!![]+!![]+!![]+[+[]]+-[]]-[!![]+!![]+!![]+[+[]]]',
    380: '[!![]+!![]+!![]+!![]+[+[]]+-[]]-[!![]+!![]+[+[]]]',
    440: '[!![]+!![]+!![]+!![]]+[!![]+!![]+!![]+!![]]+[+[]]-[]',
    446: '[!![]+!![]]*[!![]+!![]+[!![]+!![]]+[!![]+!![]+!![]]]',
    456: '[!![]+!![]+!![]+!![]]*[+!![]+[+!![]]+[+!![]]]-+-[+!![]+[!![]+!![]]]',
    466: '[!![]+!![]]*[!![]+!![]+[!![]+!![]+!![]]+[!![]+!![]+!![]]]',
    480: '[!![]+!![]+!![]+!![]]*[+!![]+[!![]+!![]]+-[]]',
    486: '[!![]+!![]]*[!![]+!![]+[!![]+!![]+!![]+!![]]+[!![]+!![]+!![]]]',
    536: '[!![]+!![]+!![]]*[!![]+!![]+[+!![]]+[!![]+!![]]]-[+!![]+[-[]]+-[]]',
    545: '[!![]+!![]+!![]+!![]]*[+!![]+[+!![]]+[+!![]]]-+-[+!![]+[-[]]+[+!![]]]',
    548: '[!![]+!![]+!![]+!![]]*[+!![]+[+!![]]+[!![]+!![]]]-+-[+!![]+[-[]]+-[]]',
    555: '[+!![]+[+!![]]+[+!![]]+-[]]*[!![]+!![]]**-!![]',
    562: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]+!![]]+[+!![]]]-[+!![]+[-[]]+-[]]',
    565: '[+!![]+[+!![]]+[!![]+!![]+!![]]+-[]]*[!![]+!![]]**-!![]',
    566: '[!![]+!![]+!![]+!![]+!![]]+[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]]-[]',
    570: '[+!![]+[+!![]]+[!![]+!![]+!![]+!![]]+-[]]*[!![]+!![]]**-!![]',
    575: '[+!![]+[+!![]]+[!![]+!![]+!![]+!![]+!![]]+-[]]*[!![]+!![]]**-!![]',
    580: '[!![]+!![]+!![]+!![]+!![]]+[+!![]+[+[]]-!![]-!![]]+[+[]]-[]',
    585: '[+!![]+[+!![]]+[+!![]+[+[]]-!![]-!![]-!![]]+-[]]*[!![]+!![]]**-!![]',
    590: '[!![]+!![]+!![]+!![]+!![]]+[+!![]+[+[]]-!![]]+[+[]]-[]',
    600: '[!![]+!![]+!![]+!![]+!![]+!![]]+[+[]]+[+[]]-[]',
    626: '[!![]+!![]]*[!![]+!![]+!![]+[+!![]]+[!![]+!![]+!![]]]',
    636: '[!![]+!![]+!![]]*[!![]+!![]+[+!![]]+[!![]+!![]]]',
    644: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]]+[!![]+!![]]]',
    648: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]]+[!![]+!![]+!![]+!![]]]',
    653: '[+!![]+[!![]+!![]+!![]]+-[]+-[]]*[!![]+!![]]**-!![]+!![]+!![]+!![]',
    660: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+-[]]',
    663: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[+!![]]]',
    666: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[!![]+!![]]]',
    669: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[!![]+!![]+!![]]]',
    674: '[!![]+!![]]*[[!![]+!![]+!![]]*[+!![]+[+!![]]+[!![]+!![]]]+!![]]',
    680: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]+!![]+!![]]+-[]]',
    684: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]+!![]+!![]]+[!![]+!![]]]',
    686: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]+!![]+!![]]+[!![]+!![]+!![]]]',
    688: '[!![]+!![]]*[!![]+!![]+!![]+[!![]+!![]+!![]+!![]]+[!![]+!![]+!![]+!![]]]',
    690: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]+!![]]+-[]]',
    696: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]+!![]]+[!![]+!![]]]',
    736: '[+!![]+[+[]]-!![]-!![]-!![]]+[!![]+!![]+!![]]*[+!![]+[!![]+!![]]]-[]',
    745: '[+!![]+[!![]+!![]+!![]+!![]]+[+!![]+[+[]]-!![]]+-[]]*[!![]+!![]]**-!![]',
    750: '[+!![]+[!![]+!![]+!![]+!![]+!![]]+[-[]]+-[]]*[!![]+!![]]**-!![]',
    746: '[+!![]+[+[]]-!![]-!![]-!![]]+[!![]+!![]]*[!![]+!![]+[!![]+!![]+!![]]]-[]',
    747: '[+!![]+[+[]]-!![]-!![]-!![]]+[!![]+!![]+!![]+!![]]*[+!![]+[!![]+!![]]]-!![]',
    748: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[+!![]]+[!![]+!![]]]-[+!![]+[-[]]+-[]]',
    755: '[+!![]+[!![]+!![]+!![]+!![]+!![]]+[+!![]]+-[]]*[!![]+!![]]**-!![]',
    760: '[+!![]+[+[]]-!![]-!![]]+[+[]]+[+[]]-[!![]+!![]+!![]+!![]+[-[]]]',
    763: '[!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[+!![]]]-+-[[+!![]]+-[]+-[]]',
    765: '[+!![]+[!![]+!![]+!![]+!![]+!![]]+[!![]+!![]+!![]]+-[]]*[!![]+!![]]**-!![]',
    767: '[+!![]+[+[]]-!![]-!![]-!![]]*[+!![]+[+!![]]+[+!![]]]-[+!![]+[+[]]]',
    770: '[+!![]+[+[]]-!![]-!![]]+[+[]]+[+[]]-[!![]+!![]+!![]+[-[]]]',
    777: '[+!![]+[+[]]-!![]-!![]-!![]]*[+!![]+[+!![]]+[+!![]]]',
    788: '[+!![]+[+[]]-!![]-!![]]+[+[]]+[+[]]-[+!![]+[!![]+!![]]]',
    800: '[+!![]+[+[]]-!![]-!![]]+[+[]]+[+[]]-[]',
    840: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[+!![]]+[+[]]]',
    846: '[!![]+!![]]*[!![]+!![]+!![]+!![]+[!![]+!![]]+[!![]+!![]+!![]]]',
    848: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[+!![]]+[!![]+!![]]]',
    855: '[+!![]+[+!![]+[+[]]-!![]-!![]-!![]]+[+!![]]+-[]]*[!![]+!![]]**-!![]',
    860: '[!![]+!![]]*[!![]+!![]+!![]+!![]+[!![]+!![]+!![]]+-[]]',
    864: '[!![]+!![]]*[!![]+!![]+!![]+!![]+[!![]+!![]+!![]]+[!![]+!![]]]',
    868: '[!![]+!![]]*[!![]+!![]+!![]+!![]+[!![]+!![]+!![]]+[!![]+!![]+!![]+!![]]]',
    870: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[-[]]]-[+!![]+[-[]]]',
    880: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+-[]]',
    867: '[+!![]+[+[]]-!![]-!![]]+[+!![]+[+[]]-!![]-!![]-!![]]+[+[]]-!![]-!![]-!![]',
    869: '[+!![]+[+[]]-!![]-!![]]+[+!![]+[+[]]-!![]-!![]-!![]]+[+[]]-!![]',
    874: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[+!![]]]-[+!![]+[-[]]]',
    884: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[+!![]]]',
    888: '[!![]+!![]+!![]+!![]]*[!![]+!![]+[!![]+!![]]+[!![]+!![]]]',
    890: '+[[[+!![]+[+[]]]-!![]-!![]]+[[+!![]+[+[]]]-!![]]+[+[]]]',
    900: '+[[[+!![]+[+[]]]-!![]]+[+[]]+[+[]]]',
    960: '+!![]+[]+[+[]+[+[]]+-[]]-[!![]+!![]+!![]+!![]+[+[]]]',
    970: '+!![]+[]+[+[]+[+[]]+-[]]-[!![]+!![]+!![]+[+[]]]',
    980: '+!![]+[]+[+[]+[+[]]+-[]]-[!![]+!![]+[+[]]]',
};

if (
    Object.entries(Literals).filter(([num, str]) => {
        const result = eval(str);
        return typeof result !== 'number' || result != num;
    }).map(([num, _]) => {
        console.log(` \x1B[1m\x1B[4m\x1B[31m${num}\x1B[0m Invalid Literal`)
    }).length > 0
) {
    console.log();
}

const LiteralStrategy = num => [Literals[num] ?? ''];
const StringConcatStrategy = num => [Array.from(num.toString()).map(digit => `[${Literals[digit]}]`).join('+') + '-[]'];
const NearLiteralAddSubStrategy = num => {
    let min = 0;
    let max = 1001;

    for (const key of Object.keys(Literals)) {
        if (key < num) {
            min = key;
        } else {
            max = key;
            break;
        }
    }

    return [Literals[min] + '+!![]'.repeat(num - min), Literals[max] + '-!![]'.repeat(max - num)];
};

const Strategies = [LiteralStrategy, NearLiteralAddSubStrategy, StringConcatStrategy];

function getBest(num) {
    return Strategies
        .flatMap(strategy => strategy(num))
        .filter(str => {
            const result = eval(str);
            return typeof result === 'number' && result == num;
        })
        .reduce((prev, curr) => (prev ?? curr).length < curr.length ? prev : curr, null) ?? '';
}

const generated = Array.from({ length: 1001 }, (_, index) => index).map(getBest);

const tooLong = Object.entries(generated).filter(([_, value]) => value.length > 75).map(([index, _]) => index);
const validLines = (generated).filter((line) => line != '');

if (tooLong.length > 0) {
    console.log(` \x1B[1m\x1B[30m\x1B[43m ! \x1B[0m ${tooLong.length} lines listed below are too long to pass hard (\x1B[33m${(tooLong.length / 1001 * 100).toFixed(2)}%\x1B[0m left)`);
    let toPrint = '   ';
    for (const [index, value] of Object.entries(tooLong)) {
        if (index % 14 == 0) {
            console.log(toPrint);
            toPrint = '   ';
        }
        toPrint += '\x1B[3' + (index % 3 + 2) + 'm' + value.padStart(4) + '\x1B[0m';
    }
    if (toPrint.length > 0) {
        console.log(toPrint);
    }
    console.log();
}

console.log();
console.log(' \x1B[1m\x1B[30m\x1B[45m Summary \x1B[0m');
console.log(`  \x1B[1m\x1B[4m\x1B[32mvalid\x1B[0m   ${validLines.length}`);
console.log(`  \x1B[1m\x1B[4m\x1B[31minvalid\x1B[0m ${1001 - validLines.length}`);
console.log(`  \x1B[33m${(validLines.length / 1001 * 100).toFixed(2)}%\x1B[0m done`);
console.log();

const path = require('path');
const fs = require('fs');

fs.writeFileSync(path.join(__dirname, 'solution.txt'), generated.join('\n'));